name: CI

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install node
      uses: actions/setup-node@v1
      with:
       node-version: '10.x'
    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: Install dependencies
      run: |
        python -m pip install --pre jupyterlab
        python -m pip install cookiecutter
    - name: Create pure frontend extension
      run: |
        cookiecutter . --no-input
        cd myextension
        jlpm
        jlpm run eslint:check
        jlpm run build
        jupyter labextension install .
        jupyter lab clean
        jupyter labextension link .
        python -m jupyterlab.browser_check
    - name: Create server extension
      run: |
        # Trick to use custom parameters
        python -c "from cookiecutter.main import cookiecutter; import json; f = open('cookiecutter_with_server.json'); cookiecutter('.', extra_context=json.load(f), no_input=True); f.close()"
        cd my-server_extension
        pip install .
        jupyter lab build
        jupyter serverextension list 1>serverextensions 2>&1
        cat serverextensions | grep "my_server_extension.*OK"
        jupyter labextension list 1>labextensions 2>&1
        cat labextensions | grep "my-server-extension.*OK"
        python -m jupyterlab.browser_check
        
        pip uninstall -y my_server_extension
        jupyter lab clean

        pip install -e .
        jupyter serverextension enable --py my_server_extension
        jupyter labextension link .
        jupyter serverextension list 1>serverextensions 2>&1
        cat serverextensions | grep "my_server_extension.*OK"
        jupyter labextension list 1>labextensions 2>&1
        cat labextensions | grep "my-server-extension.*OK"
        python -m jupyterlab.browser_check
